//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass Compositor;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Core
            {
                apicontract LiftedContract;

                interface ICompositorController;

                runtimeclass CompositorController;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Core
            {
                declare
                {
                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.Core.CompositorController*, IInspectable*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Core
            {
                [contractversion(1.0)]
                apicontract LiftedContract
                {
                }

                [contract(Microsoft.UI.Composition.Core.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Core.CompositorController)]
                [experimental]
                [uuid(CC107CDC-558F-5D1A-96A5-A735AC04386B)]
                interface ICompositorController : IInspectable
                {
                    [propget] HRESULT Compositor([out] [retval] Microsoft.UI.Composition.Compositor** value);
                    HRESULT Commit();
                    HRESULT EnsurePreviousCommitCompletedAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
                    [eventadd] HRESULT CommitNeeded([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.Core.CompositorController*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CommitNeeded([in] EventRegistrationToken token);
                }

                [activatable(Microsoft.UI.Composition.Core.LiftedContract, 1.0)]
                [contract(Microsoft.UI.Composition.Core.LiftedContract, 1.0)]
                [experimental]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CompositorController
                {
                    [default] [experimental] interface Microsoft.UI.Composition.Core.ICompositorController;
                    interface Windows.Foundation.IClosable;
                }
            }
        }
    }
}
